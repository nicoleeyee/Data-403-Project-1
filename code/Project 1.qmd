---
title: "Project 1"
format: pdf
editor: visual
---

```{r}
library(tidyverse)
library(readr)
library(here)
library(ggplot2)
library(arrow) 
library(plotly)
```

## Data Pre-processing

```{r}
# data <- read_csv(here::here("Iowa_Liquor_Sales_20250926.csv"))
data <- read_parquet(here("data", "iowa_liquor_2023_2025.parquet"))
pop <- read_csv(here("data", "pop.csv"))
prox <- read_csv(here("data", "proximity.csv")) |>
  mutate(county = tolower(county))

head(data)
colnames(data)
str(data)
```

-   total sales for each store per month

-   store proximity / num stores in certain radius

-   efficiency - sales/pop size

-   total sales per month / num orders every month for each store -\> size of store?

-   how often are the stores ordering

-   what are they ordering most of -

-   deal w missing values

    -   check county, sales, zip codes

```{r}
data_clean <- data |>
  mutate(year = year(date),
         week = week(date),
         month = month(date),
         county = tolower(county))

head(data_clean)
```

## County Population Data

```{r}
pop <- read_csv("/Users/nicoleyee/Downloads/cc-est2024-agesex-19.csv")

pop_split <- pop |>
  mutate(CTYNAME = tolower(CTYNAME),
         name = str_extract(CTYNAME, pattern = "^[^ ]+"),
         year = case_when(
           YEAR == 1 ~ 2020,
           YEAR == 2 ~ 2020,
           YEAR == 3 ~ 2021,
           YEAR == 4 ~ 2022,
           YEAR == 5 ~ 2023,
           YEAR == 6 ~ 2024,
         ),
         over21 = POPESTIMATE-(AGE1417_TOT+AGE513_TOT+UNDER5_TOT),
         propOver21 = over21/POPESTIMATE)

write_csv(pop_split, file = here("pop.csv"))

joined <- data_clean |>
  left_join(pop, by=join_by(county==name, year == year))

final <- joined |>
  left_join(prox, by= join_by(county==county, store == store))
head(pop_split)
```

```{r}
pop_split |>
  filter(year == 2024) |>
  slice_max(order_by=over21, n=10) |>
  arrange(over21) |>
  ggplot(aes(x=reorder(name, -over21), y=over21)) +
  geom_col() +
  theme_minimal() +
  labs(x="County", y="Population over 21")

pop_split |>
  filter(year == 2024) |>
  slice_max(order_by=propOver21, n=10) |>
  arrange(over21) |>
  ggplot(aes(x=reorder(name, -propOver21), y=propOver21)) +
  geom_col() +
  theme_minimal() +
  labs(x="County", title="Top 10 Counties with highest prop. of pop. over 21")
```

```{r}
joined |>
  filter(Year == 2024) |>
  group_by(CTYNAME) |>
  summarise(total_sales = sum(`Sale (Dollars)`)) |>
  slice_max(order_by = total_sales, n=10) |>
  ggplot(aes(x=reorder(CTYNAME, -total_sales), y=total_sales)) +
  geom_col() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x="County",y="Total Sales (USD)", title="Total Sales in 2024")
```

```{r}
pop_split |>
  slice_max(order_by = POPESTIMATE)
```

```{r}
proximity <- read_csv(here("data", "proximity.csv"))
```

```{r}
store_sales <- data_clean |>
  group_by(`Store Number`) |>
  summarise(sum = sum(`Sale (Dollars)`)) |>
  filter(!is.na(`Store Number`))

prox_clean <- proximity |>
  filter(store %in% store_sales$`Store Number`) |>
  left_join(store_sales, by=join_by(store==`Store Number`)) 

plot <- prox_clean |>
  filter(sum < 15000000) |>
  ggplot(aes(x=`# of stores within 5 mile radius`, y=sum, text = `store`)) +
  geom_jitter() +
  theme_minimal()
ggplotly(plot)

```

```{r}
mat <- matrix(c(1,2,3,4,5,6,7,8,9), nrow = 3)
res <- matrix(c(1,4,2,56,4,3,1,2,6), nrow = 3)
```

## Linear Regression

```{r}
lin_reg <- function(X, Y) {
  X.mat <- as.matrix(X) #|>
    # drop_na(Y) |>
    # as.matrix()
  Y.mat <- as.matrix(Y) #|>
    # drop_na() |>
    # as.matrix()
  
  ones <- rep(1, nrow(X))
  
  X.mat <- as.matrix(cbind(ones, X.mat))
  
  
  B <- solve(t(X.mat)%*%X.mat)%*%(t(X.mat)%*%Y.mat)
  
  return(B)
}
```

```{r}
preds <- s2 |>
  select(!per_person) |>
  drop_na()
res <- s2 |>
  select(per_person) |>
  drop_na()
lin_reg(preds, res)
```

```{r}
predict <- function(X, B){
  ones <- rep(1, nrow(X))
  X <- data.matrix(X)
  X.mat <- cbind(ones, X)
  
  Y.hat <- X.mat%*%B
  
  return(as.data.frame(Y.hat))
}
```

## Cross Validation

```{r}
cv <- function(data, predictors, response, num_splits){

  n <- nrow(data)
  folds <- base::sample(rep(1:num_splits, length.out = n))
  
  results <- tibble()
  
  for(i in 1:num_splits){
    test <- which(folds == i)
    X_train <- data[-test, predictors, drop = FALSE]
    Y_train <- data[-test, response, drop= FALSE]
    
    X_test <- data[test, predictors, drop=FALSE]
    Y_test <- data[test, response]
    
    B <- lin_reg(X_train, Y_train)
    
    Y_hat <- predict(X_test, B)
    # return(Y_hat)
    # print(Y_hat[1:5,])
    # print(Y_test[1:5,])
    split_metrics <- metrics(predictors, as.data.frame(Y_test), Y_hat) |>
      mutate(split = i)
    
    results <- bind_rows(results, split_metrics)
  }
  
  out <- results |>
    summarise(across(c(R2, AR2, MAE, RMSE), mean))
  return(out)
}
```

## Metrics

```{r}
metrics <- function(predictors, Y, pred){
  # return(Y-pred)
  n <- nrow(Y)
  p <- length(predictors) + 1
  ssr <- sum((Y[,1]-pred[,1])^2)
  sst <- sum((Y[,1]-mean(Y[,1]))^2)
  
  # print(Y[,1])
  # print(pred[,1])
  
  rsq <- 1- ssr/sst

  adjrsq <- 1-(1-rsq)*(n-1)/(n-p)

  mae <- mean(abs(Y[,1]-pred[,1]))

  rmse <- sqrt(ssr/n)

  out <- tibble(R2 = rsq,
                AR2 = adjrsq,
                MAE = mae,
                RMSE = rmse)

  return(out)
}
```

## Testing

```{r}
s1 <- joined |>
  group_by(county, week, month, year) |>
  # summarise(avg_sales = mean(sale_dollars)) |>
  mutate(avg_sales = mean(sale_dollars),
    per_person = avg_sales/POPESTIMATE,
         propsex = POPEST_MALE/POPEST_FEM,
         propteen = AGE1417_TOT/POPESTIMATE,
         propcollege = AGE1824_TOT/POPESTIMATE) |>
  ungroup()
predictors <- c("month", "propOver21", "propsex", "propteen")
response <- "per_person"
```

```{r}
s2 <- s1 |>
  select(month, per_person, propOver21, propsex, propteen, propcollege) |>
  group_by(county, month, ) |>
  summarize(avg = mean(sale_dollars))
  drop_na()
```

```{r}
cv(s2, predictors, response, 5)
```

```{r}
test <- joined |>
  group_by(county, month) |>
  summarise(per_person = mean(sale_dollars)/POPESTIMATE)

test |>
  ggplot(aes(x=month, y=per_person, color = county)) +
  geom_point()
```

```{r}
model_data <- read_csv(here("data", "dead_model_data.csv"))
```

```{r}
predictors <- colnames(model_data)[!colnames(model_data) %in% c("revenue","county")]
response <- 'revenue'
final <- model_data |>
  mutate(across(month_2:month_7, as.integer))
cv(final, predictors, response, 5)
```

```{r}
model_data |>
  ggplot(aes(x=))
```

```{r}
test <- final |>
  pivot_longer(cols = c("vodka_ptc", "whiskey_ptc", "tequila_ptc", "rum_ptc"),
               names_to = "type",
               values_to = "type_ptc")

plot_data <- test |>
  group_by(type) |>
  summarise(sales_ptc = mean(type_ptc),
            revenue = mean(revenue))

plot_data |>
  ggplot(aes(x=reorder(type, -sales_ptc), y=sales_ptc, color=type, fill = type)) +
  geom_col() +
  scale_color_manual(values = c("#a6cee3", "#1f78b4", "#b2df8a", "#33a02c"))+
  scale_fill_manual(values = c("#a6cee3", "#1f78b4", "#b2df8a", "#33a02c")) +
  theme_minimal() +
  labs(x="type",
       y="% bought")

p2 <- test |>
  group_by(type, county, year) |>
  summarise(sales_ptc = mean(type_ptc),
            revenue = mean(revenue))
p2 |>
  ggplot(aes(x=sales_ptc, y=revenue, colour = type)) +
  geom_point()

p3 <- final |>
  pivot_longer(cols = c("hispanic", "foreign_born", "black", "api", "aian"),
               names_to = "ethnicity",
               values_to = "ethnicity_count")

p3 |>
  group_by(ethnicity, county) |>
  summarise(avg_sale = mean(revenue),
            count = mean(ethnicity_count)) |>
  filter(avg_sale < 7500000) |>
  ggplot(aes(x=count, y=avg_sale, color = ethnicity)) +
  geom_point() +
  labs(x="Population Count",
       y="Sales ($)") +
  scale_color_brewer(type="qual") +
  # scale_color_manual(values = c("#a6cee3", "#1f78b4", "#b2df8a", "#33a02c","darkgreen"))+
  theme_bw()
```

```{r}
# counties with highest sales
# bin alc type or ethnicity
p4 <- final |>
  pivot_longer(cols = c("vodka_ptc", "whiskey_ptc", "tequila_ptc", "rum_ptc"),
               names_to = "type",
               values_to = "type_ptc") |>
  group_by(county_1, type) |>
  summarise(pct = mean(type_ptc),
            rev = mean(revenue)) |>
  mutate(type = case_when(
    type == "vodka_ptc" ~ "Vodka",
    type == "whiskey_ptc" ~ "Whiskey",
    type == "tequila_ptc" ~ "Tequila",
    type == "rum_ptc" ~ "Rum",
  )) |>
  arrange(-rev)
  # slice_max(order_by = rev, n=10)
  
p4[1:40,] |>
  ggplot(aes(fill=type, y=pct, x=reorder(county_1, -rev))) +
  geom_bar(position="stack", stat="identity") +
  scale_fill_manual(values = c("#a6cee3", "#1f78b4", "#b2df8a", "#33a02c"),
                    name="Type") +
  labs(x="County",
       y="",
       title = "Proportion of alcohol types sold in counties with the highest sales") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 30))

```

```{r}
p5 <- model_data |>
  mutate(ratio = revenue/population) |>
  pivot_longer(cols = c("pct_hispanic", "pct_foreign_born", "pct_black", "pct_api", "pct_aian"),
               names_to = "ethnicity",
               values_to = "ethnicity_count",
               names_prefix = "pct_") |>
  group_by(county_1, ethnicity) |>
  summarise(pct = mean(ethnicity_count)/100,
            rev = mean(ratio)) |>
  mutate(ethnicity = case_when(
    ethnicity == "hispanic" ~ "Hispanic",
    ethnicity == "foreign_born" ~ "Foreign born",
    ethnicity == "black" ~ "Black",
    ethnicity == "aian" ~ "American Indian/Alaska Native",
    ethnicity == "api" ~ "Asian, Native Hawaiian, or Pacific Islander"
  )) |>
  arrange(-rev)

p5[1:50,] |>
  ggplot(aes(fill=ethnicity, y=pct, x=reorder(county_1, -rev))) +
  geom_bar(position="stack", stat="identity") +
  scale_fill_manual(values = c("#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "darkgreen"),
                    name="Race/Ethnicity") +
  labs(x="County",
       y="",
       title = "") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 30))

```

```{r}
p6 <- model_data |>
    pivot_longer(cols = c("vodka_ptc", "whiskey_ptc", "tequila_ptc", "rum_ptc"),
               names_to = "type",
               values_to = "type_ptc") |>
  group_by(type, county) |>
  summarise(rev = mean(revenue),
            pct = mean(type_ptc)) 

p6 |>
  # filter(type %in% c("tequila_ptc", "whiskey_ptc")) |>
  ggplot(aes(x=pct, y=rev, color=type)) +
  geom_point() +
  theme_minimal()
```

```{r}
model_data |>
  ggplot(aes(x=median_age, y=revenue)) +
  geom_jitter() +
  labs(x="Median Age",
       y="Alcohol Sales") +
  scale_y_continuous(labels = scales::dollar) +
  theme_bw()
```

```{r}
p7 <- model_data |>
  mutate(county = tolower(county)) |>
  left_join(pop_split, by=join_by(county==name, year==year))

p7 |>
  pivot_longer(cols = c("AGE1417_TOT", "AGE1824_TOT", "AGE2544_TOT", "AGE4564_TOT",
                        "AGE65PLUS_TOT"),
               names_to = "age_group",
               values_to = "age_counts") |>
  mutate(ageprops = age_counts/population) |>
  group_by(age_group, county) |>
  slice_max(age_counts) |>
  summarize(rev = mean(revenue)) |>
  ggplot(aes(x=age_group,y=rev)) +
  geom_boxplot()
```
